package com.examenweb2021.model.entities;
// Generated 28/06/2021 08:59:35 AM by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario")
public class Usuario implements java.io.Serializable {
	private static final long serialVersionUID = 1L;

	private Integer id;
	private Rol rol;
		
	private String usuario;
	private String email;
	private String pass;
	private Short state;
	private Set<Connectiontoken> connectiontokens = new HashSet<Connectiontoken>(0);

	public Usuario() {
	}

	public Usuario(Rol rol, String usuario, String email, String pass, Short state,
			Set<Connectiontoken> connectiontokens) {
		this.rol = rol;
		this.usuario = usuario;
		this.email = email;
		this.pass = pass;
		this.state = state;
		this.connectiontokens = connectiontokens;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	public Rol getRol() {
		return this.rol;
	}

	public void setRol(Rol rol) {
		this.rol = rol;
	}

	public String getUsuario() {
		return this.usuario;
	}

	public void setUsuario(String usuario) {
		this.usuario = usuario;
	}

	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getPass() {
		return this.pass;
	}

	public void setPass(String pass) {
		this.pass = pass;
	}

	public Short getState() {
		return this.state;
	}

	public void setState(Short state) {
		this.state = state;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Connectiontoken> getConnectiontokens() {
		return this.connectiontokens;
	}

	public void setConnectiontokens(Set<Connectiontoken> connectiontokens) {
		this.connectiontokens = connectiontokens;
	}

}
